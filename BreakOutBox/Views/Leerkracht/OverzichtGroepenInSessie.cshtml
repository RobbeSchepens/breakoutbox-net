@model BreakOutBox.Models.Domain.Sessie
@{
    ViewData["Title"] = "Overzicht";
}

<div class="row">
    <div class="col-12 col text-center">
        <h2>Sessie: @Model.Omschrijving</h2>
        <br>
        <h4>Status: @Model.GetState().Beschrijving</h4>
    </div>
</div>
<div class="row">
    @foreach (var groep in Model.Groepen)
    {
        <div class="sm-12 md-6 lg-4 groep">
            <ul>
                <li><i class="fas fa-users fa-fw icon"></i>Groep #@(groep.GroepId) is @groep.GetState().Beschrijving</li>
                @foreach (var leerling in groep.Leerlingen)
                {
                    <li><i class="far fa-user fa-fw icon"></i>@(leerling.Voornaam + " " + leerling.Achternaam)</li>
                }
                @switch (groep.State)
                {
                    case 0: // NietGereedState
                        <li>
                            <a href="@Url.Action("ZetGroepGereed", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Zet deze groep op gereed">
                                Zet deze groep op gekozen.
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("VergrendelGroep", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Vergrendel deze groep">
                                Vergrendel deze groep.
                            </a>
                        </li>
                        break;
                    case 1: // GereedState
                        <li>
                            <a href="@Url.Action("ZetGroepNietGereed", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Zet deze groep op niet-gereed">
                                Zet deze groep op niet-gekozen.
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("VergrendelGroep", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Vergrendel deze groep">
                                Vergrendel deze groep.
                            </a>
                        </li>
                        break;
                    case 2: // VergrendeldState
                        <li>
                            <a href="@Url.Action("OntgrendelGroep", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Ontgrendel deze groep">
                                Ontgrendel deze groep.
                            </a>
                        </li>
                        <li>
                            <a href="@Url.Action("BlokkeerGroep", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Blokkeer deze groep">
                                Blokkeer deze groep.
                            </a>
                        </li>
                        break;
                    case 3: // GeblokkeerdState
                        <li>
                            <a href="@Url.Action("DeblokkeerGroep", "Leerkracht", new { groepid = groep.GroepId })" class="tip" title="Deblokkeer deze groep">
                                Deblokkeer deze groep.
                            </a>
                        </li>
                        break;
                }
            </ul>
        </div>
    }
</div>
<div class="float-right text-center">
    <form>
        @switch (Model.State)
        {
            case 0: // NonActiefState
                <button asp-controller="Leerkracht" asp-action="ActiveerSessie" asp-route-id="@Model.Code" class="">Activeer</button>
                break;
            case 1: // ActiefState
                <button asp-controller="Leerkracht" asp-action="DeactiveerSessie" asp-route-id="@Model.Code" class="">Deactiveer</button>
                <button asp-controller="Leerkracht" asp-action="BlokkeerSessie" asp-route-id="@Model.Code" class="">Blokkeer</button>
                <button asp-controller="Leerkracht" asp-action="StartSpelSessie" asp-route-id="@Model.Code" class="">Start</button>
                break;
            case 2: // InSpelState
                <button asp-controller="Leerkracht" asp-action="DeactiveerSessie" asp-route-id="@Model.Code" class="">Deactiveer</button>
                <button asp-controller="Leerkracht" asp-action="Blokkeer" asp-route-id="@Model.Code" class="">Blokkeer</button>
                break;
            case 3: // GeblokkeerdState
                <button asp-controller="Leerkracht" asp-action="DeblokkeerSessie" asp-route-id="@Model.Code" class="">Deblokkeer</button>
                break;
        }
        <button type="submit" style="font-size:22px" onClick="window.location.reload()"> <i class="fa">&#xf021;</i></button>
    </form>
</div>

@functions{
    public string Encode(string encodeMe)
    {
        byte[] encoded = System.Text.Encoding.UTF8.GetBytes(encodeMe);
        return Convert.ToBase64String(encoded);
    }
}